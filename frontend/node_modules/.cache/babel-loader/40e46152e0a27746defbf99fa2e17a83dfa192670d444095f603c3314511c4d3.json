{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yash\\\\Academics\\\\Projects\\\\Scraper\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport SentimentChart from \"./components/SentimentChart\";\nimport SentimentTable from \"./components/SentimentTable\";\nimport Navbar from \"./components/Navbar\";\nimport Loader from \"./components/Loader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchSentimentData = async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:5000/api/sentiments\");\n      setData(res.data);\n    } catch (error) {\n      console.error(\"Error fetching sentiment data\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchSentimentData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: \"Web Scraping & Sentiment Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(SentimentChart, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SentimentTable, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","SentimentChart","SentimentTable","Navbar","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","loading","setLoading","fetchSentimentData","res","get","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginTop","className","_c","$RefreshReg$"],"sources":["D:/Yash/Academics/Projects/Scraper/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport SentimentChart from \"./components/SentimentChart\";\nimport SentimentTable from \"./components/SentimentTable\";\nimport Navbar from \"./components/Navbar\";\nimport Loader from \"./components/Loader\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchSentimentData = async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:5000/api/sentiments\");\n      setData(res.data);\n    } catch (error) {\n      console.error(\"Error fetching sentiment data\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchSentimentData();\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      <h1 style={{ textAlign: 'center', marginTop: '20px' }}>Web Scraping & Sentiment Dashboard</h1>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"container\">\n          <SentimentChart data={data} />\n          <SentimentTable data={data} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMgB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,sCAAsC,CAAC;MACnEL,OAAO,CAACI,GAAG,CAACL,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdiB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACH,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlB,OAAA;MAAImB,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7FX,OAAO,gBACNP,OAAA,CAACF,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEVlB,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAR,QAAA,gBACxBd,OAAA,CAACL,cAAc;QAACU,IAAI,EAAEA;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9BlB,OAAA,CAACJ,cAAc;QAACS,IAAI,EAAEA;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAACd,EAAA,CAjCID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}