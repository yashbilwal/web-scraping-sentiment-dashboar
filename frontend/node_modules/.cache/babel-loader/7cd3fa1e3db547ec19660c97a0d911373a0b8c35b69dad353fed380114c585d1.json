{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yash\\\\Academics\\\\Projects\\\\Scraper\\\\frontend\\\\src\\\\components\\\\SentimentTable.jsx\";\n// frontend/src/components/SentimentTable.js\nimport React from 'react';\nimport { Table, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentTable = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"shadow-sm\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Article Sentiment Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Headline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sentiment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Scraped At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: item.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: item.headline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge \n                    ${item.sentiment === 'positive' ? 'bg-success' : item.sentiment === 'negative' ? 'bg-danger' : 'bg-warning text-dark'}`,\n                children: item.sentiment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.scraped_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = SentimentTable;\nexport default SentimentTable;\nvar _c;\n$RefreshReg$(_c, \"SentimentTable\");","map":{"version":3,"names":["React","Table","Card","jsxDEV","_jsxDEV","SentimentTable","data","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","map","item","idx","href","url","target","rel","headline","sentiment","scraped_at","_c","$RefreshReg$"],"sources":["D:/Yash/Academics/Projects/Scraper/frontend/src/components/SentimentTable.jsx"],"sourcesContent":["// frontend/src/components/SentimentTable.js\r\nimport React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\n\r\nconst SentimentTable = ({ data }) => {\r\n  return (\r\n    <Card className=\"shadow-sm\">\r\n      <Card.Body>\r\n        <Card.Title>Article Sentiment Analysis</Card.Title>\r\n        <Table striped bordered hover responsive className=\"mt-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>Headline</th>\r\n              <th>Sentiment</th>\r\n              <th>Scraped At</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((item, idx) => (\r\n              <tr key={idx}>\r\n                <td><a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">{item.headline}</a></td>\r\n                <td>\r\n                  <span className={`badge \r\n                    ${item.sentiment === 'positive' ? 'bg-success' : \r\n                      item.sentiment === 'negative' ? 'bg-danger' : 'bg-warning text-dark'}`}>\r\n                    {item.sentiment}\r\n                  </span>\r\n                </td>\r\n                <td>{item.scraped_at}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SentimentTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}